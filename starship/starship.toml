# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

right_format = """$cmd_duration $kubernetes"""

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
disabled = false
show_always = true

[hostname]
ssh_only = false
format = 'on [$hostname](bold purple) '
trim_at = "."
disabled = false

# configure directory
[directory]
read_only = " 󰌾"
truncation_length = 10
truncate_to_repo = true    # truncates directory to root folder if in github repo
style = "bold italic blue"

[cmd_duration]
min_time = 4
show_milliseconds = false
disabled = false
style = "bold italic red"

[[battery.display]]
threshold = 100
style = "bold green"

[kubernetes]
disabled = false
format = '[$symbol$context( \($namespace\))](dimmed $style)'

[aws]
symbol = "  "

[docker_context]
symbol = "  "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[git_branch]
symbol = "  "

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)"
modified = "[${count}+](yellow)"
deleted = "[${count}-](red)"
conflicted = "[${count}~](red)"
ahead = "⇡${count}"
behind = "⇣${count}"
untracked = "[${count}?](blue)"
staged = "[${count}+](green)"

[git_state]
style = "bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"
revert = "revert"
cherry_pick = "cherry"
bisect = "bisect"
am = "am"
am_or_rebase = "am/rebase"

[kotlin]
symbol = "  "

[java]
symbol = "  "
style = "#FC9867"

[memory_usage]
symbol = "󰍛  "

[lua]
symbol = " "

[nodejs]
symbol = "  "
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[package]
symbol = "󰏗  "

[python]
symbol = "  "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"
